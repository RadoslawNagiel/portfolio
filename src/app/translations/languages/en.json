{
  "noProjectsInfo": "No projects meeting the selected criteria",
  "header": {
    "title": "Portfolio – Radosław Nagiel",
    "tooltips": {
      "filter": "Filter projects",
      "theme": "Change theme",
      "language": "Change language"
    }
  },
  "projectType": {
    "private": "Private",
    "professional": "Professional",
    "group": "Group",
    "individual": "Individual",
    "webApp": "Web app",
    "mobileApp": "Mobile app",
    "game": "Game"
  },
  "filters": {
    "title": "Filters",
    "projectType": "Project type",
    "language": "Programming language",
    "framework": "Framework",
    "api": "API",
    "library": "Library",
    "utility": "Utility",
    "clearAllTooltip": "Clear all filters",
    "clearTooltip": "Clear filter"
  },
  "projects": {
    "now": "currently",
    "technologies": "Technologies used:",
    "targeto": {
      "name": "Targeto",
      "description": "<b>Mobile App for Goal Setting and Achievement</b><br>Currently in development, not yet publicly available<br>Author project: concept, UX/UI design, implementation<br><br><b>Description:</b><br>Targeto is my original mobile application designed for individuals who want to effectively plan, achieve, and track their goals while building positive habits. It’s designed with a focus on minimalism, clarity, and daily usability. The app supports users at every stage of their goal journey – from planning and daily actions to regular summaries.<br><br><b>Key features:</b><br><br>- <b>Goal creation and management</b> – organize goals by categories (e.g., learning, work, fitness) and define your own custom areas.<br>- <b>Daily activity tracking</b> – users check off completed tasks, and the app continuously displays progress as a percentage of goal completion.<br>- <b>Notifications</b> – automatic reminders related to goals, activities, and weekly/monthly summaries.<br>- <b>Statistics and progress analysis</b> – clear and motivating data presentation (planned goals, completion percentages, daily activity).<br>- <b>Personalization</b> – choice of light or dark theme, and customizable notification settings.<br>- <b>Backup support</b> – ability to locally save and restore data backups.<br><br><b>My role:</b><br>Full responsibility for the entire app development process – from idea and design to implementation and testing."
    },
    "quiz": {
      "name": "Quiz",
      "description": "<b>Web Application – Single–Choice Quiz</b><br>Created as a recruitment task for <i>MAE Multimedia Art & Education</i><br><br><b>Description:</b><br>A single–choice quiz web application developed as part of a recruitment task. The project was implemented according to technical specifications, with a strong focus on functionality. The main goal was to deliver a complete and smooth quiz experience.<br><br><b>Key features:</b><br><br>- <b>Start screen</b> with the ability to begin the quiz and switch the language (PL/EN).<br>- <b>Quiz questions</b> with multiple single–choice answers and a button to proceed.<br>- <b>Summary screen</b> showing the number of correct and incorrect answers, along with a dynamic message based on the score (0–50%, 51–80%, 81–100%).<br>- <b>Answer review</b> after completing the quiz – displaying the user's answers and the correct ones for each question.<br>- <b>Bilingual support</b> – all content is loaded from external `.json` files, with the option to switch languages at any time without interrupting the quiz.<br>- <b>Automatic restart</b> – after 5 minutes of inactivity, the app automatically returns to the start screen.<br><br><b>My role:</b><br>Full implementation of the task – frontend development in Angular according to the technical requirements, thoughtful component structure, logic for the quiz flow, translations, automatic reset, and dynamic result display.",
      "gitHubButton": "GitHub",
      "quizButton": "Quiz demo"
    },
    "wineryV2": {
      "name": "Winery - second version",
      "description": "<b>Mobile Assistant for Home Winemakers</b><br>This is a refreshed and improved version of my engineering thesis project<br>Author project: concept, UX/UI design, implementation, and publication<br><br><b>Description:</b><br>Winery is my original mobile application designed for home winemaking enthusiasts. It acts as a personal assistant throughout the entire wine production process – from planning and ingredient calculation to tracking progress and saving finished wines.<br><br><b>Key features:</b><br><br>- <b>Recipes and guides</b> – a collection of proven recipes and practical tips for both beginners and experienced winemakers.<br>- <b>Winemaking calculators</b> – essential during wine production, automatically calculating values based on measurements.<br>- <b>Step–by–step guidance</b> – the app walks users through the entire winemaking process, showing each stage and sending reminders.<br>- <b>Progress tracking</b> – mark completed steps and monitor which stage each wine is currently in.<br>- <b>Winery management</b> – save wines in production and finished bottles with editing options and personal notes.<br>- <b>Custom recipes</b> – create and save your own formulas for future use.<br>- <b>Wine photos</b> – add images to help distinguish between wines easily.<br>- <b>Personalization</b> – choose between light and dark mode to match your preferences.<br>- <b>Backup</b> – locally save and restore data backups.<br><br><b>My role:</b><br>Full responsibility for the entire process – from concept and design to implementation, testing, and publication.<br>",
      "gitHubButton": "GitHub",
      "shopButton": "Android shop"
    },
    "safetyHab": {
      "name": "Safety Hab",
      "webPage": "Project website",
      "description": "<b>Web and Mobile Application for Company Management</b><br>Professional project – team of approx. 12 people<br><br><b>Description:</b><br>Safety Hab is a comprehensive application that supports organizational management – both from the administrative and employee perspectives. The system is available as a web and mobile app, with features designed to streamline communication, time tracking, and company structure management. A key focus of the project was on creating intelligent components and ensuring smooth integration across platforms.<br><br><b>Key Features:</b><br>- <b>Organization and Structure</b>– overview of branches, positions, management, and employees.<br>- <b>Team Schedule</b>– list of employees and task entries (status, assigned team, duration, recurrence, description, etc.).<br>- <b>Work Time Tracking</b>– assigning work hours to specific tasks and projects.<br>- <b>Employee Profile</b>– contact and personal information, position, employment type, assigned projects.<br>- <b>Job Positions</b>– task scope, required skills, trainings, and risk factors.<br>- <b>Leave Requests</b>– application form with description, status, and leave calendar.<br>- <b>User Role Modules:</b><br>&ensp;- <b>Super admin</b>– organization and account management<br>&ensp;- <b>Admin</b>– full management of the organization, projects, calendar, and teams<br>&ensp;- <b>User</b>– work time tracking, statistics, projects, leave requests, account settings<br><br><b>My Role:</b><br>- Full responsibility for the mobile application – implementation and publishing<br>- Co-development of the web application – implementation of selected functionalities<br>- Additionally: occasional support with backend (API) development<br><br>Image source: <i>safetyhab.com</i>"
    },
    "lureForReal": {
      "name": "Lure For Real",
      "androidButton": "Android shop",
      "iosButton": "iOS shop",
      "webPage": "Project website",
      "description": "<b>Mobile dating app with a web-based admin panel</b><br>Professional project – team of approx. 5 people<br><br><b>Description:</b><br>Lure For Real is a modern dating application focused on facilitating real-life meetups in physical locations. After logging in and creating a profile, the user can select a club or venue nearby (based on GPS) and join it. Within the selected location, they can see other users who match their preferences. Profiles can be browsed, and users can express interest in meeting by swiping right. If both users are interested, a live chat is initiated. After a successful meeting, users can confirm it by selecting a symbol in the app. The application uses a notification system to inform users about important activity.<br><br>The entire system is managed via an advanced administrative panel that enables full customization of the app's appearance for specific venues.<br><br><b>Key Features – Mobile App:</b><br>- Login via Google, Apple ID, or email<br>- Profile creation and editing (personal details, photos, preferences)<br>- Browsing nearby available locations (based on GPS)<br>- Joining a venue and viewing profiles of users currently there<br>- Matching system based on swipe gestures (accept/reject)<br>- Chat between matched users<br>- Premium features, e.g. sending a \"Super Drink\" – a message to multiple users at once<br>- Subscription and payment handling (various time-based plans)<br><br><b>Admin Panel (Web) Features I Implemented:</b><br>- Superadmin role and creation of admin accounts with specific roles<br>- Customization of the app’s theme per venue (colors, icons)<br>- Campaign creation – periodically assigns regular users to selected clubs<br>- Designing the content of login confirmation emails<br>- Location management (visibility in the app) and synchronization with OpenStreetMap for various venue types<br><br><b>API Features I Developed:</b><br>- Admin role management<br>- Application theme customization system<br><br><b>My Role:</b><br>- Full responsibility for the mobile application – implementation and publishing<br>- Co-development of the web admin panel – implementation of selected functionalities<br>- Additionally: support with selected backend (API) features<br><br>Image source: <i>lure4real.com</i>"
    },
    "warlockIdle": {
      "name": "Warlock Idle",
      "androidButton": "Android shop",
      "description": "<b>Idle Mobile Game</b><br>Professional project – team of approx. 3 people<br><br><b>Description:</b><br>*Warlock Idle- is a feature-rich clicker idle mobile game in which the player takes on the role of a warlock gaining power by tapping and passively accumulating energy in a magical orb. As the game progresses, players can upgrade their attributes through random cards, send out demons to collect ingredients, brew alchemical potions, unlock new abilities, and perform a \"soul transfer\" – a game reset with bonus multipliers.<br><br><b>Key features:</b><br>- Character class system and skill development (Academy)<br>- Alchemy lab for crafting temporary power-up potions<br>- Demon system that gathers points or ingredients while the player is away<br>- Premium currency available via ads or in-app purchases<br>- Backend API to prevent cheating and verify game state integrity<br>- Achievements, leaderboards, and referral links to invite friends (with rewards)<br>- Parallax background responding to device gyroscope<br>- Push notifications<br>- Full sound design with adjustable volume<br>- Configurable notifications, language, and number format<br><br><b>My role:</b><br>- Full project management<br>- Complete responsibility for the mobile application (implementation and release)<br>- Full responsibility for the backend (API and its security)<br>- Implementation of provided graphics and refinement of UX/UI"
    },
    "rh": {
      "name": "Cardiological Rehabilitation",
      "description": "<b>Mobile application supporting cardiac rehabilitation</b><br>Professional project – team of approx. 5 people<br><br><b>Description:</b><br>Cardiac Rehabilitation is an advanced mobile application designed to support the recovery of patients after cardiac diseases. It enables planning of training sessions, automatic collection of measurements from medical devices (ECG holter, blood pressure monitor, scale), and real-time monitoring of results by doctors. The app also provides step-by-step instructions, allows users to complete questionnaires, and monitors results against alarm thresholds.<br><br>I took over the project from another developer and was responsible for modernizing and further developing the application.<br><br><b>Key features:</b><br>- Access to personalized training plans approved by doctors<br>- Integration with medical devices (ECG, blood pressure monitor, scale) via Bluetooth<br>- Automatic data collection and transmission to the app and backend system<br>- Real-time ECG monitoring by a doctor during training sessions<br>- Health and final questionnaires for users<br>- Monitoring results against alarm thresholds<br>- Intuitive measurement instructions<br>- Designed for ease of use, especially for elderly users<br><br><b>My role:</b><br>- UI refresh and library updates<br>- Implementation of new features such as the final questionnaire and automatic measurement reading on the home screen<br>- Bug fixes and adaptation of the app to the new microservice-based architecture<br>- Close collaboration with the backend team for API integration<br><br>Image source: <i>chrome-stats.com/d/pl.mediguard.hybrid_rehabilitation</i>"
    },
    "zdrowiej": {
      "name": "Zdrowiej",
      "androidButton": "Android shop",
      "iosButton": "iOS shop",
      "webPage": "Project website",
      "description": "<b>Mobile Application for People with Diabetes</b><br>Professional project – team of approx. 5 people<br><br><b>Description:</b><br>*Zdrowiej- is an advanced mobile app designed to support people living with diabetes in monitoring their health on a daily basis. It allows users to automatically import measurements from medical devices, keep a health logbook, and participate in educational programs. The app integrates with dedicated glucometers, scales, and Bluetooth-enabled insulin pen caps.<br><br><b>Scope of my work:</b><br>I took over the project from a previous developer. My responsibilities included both bug fixing and the development of new features:<br><br>- Implementation of an educator code – allowing users to be assigned to an educational program during registration.<br>- Automatic data retrieval – the app automatically detects and connects to active Bluetooth medical devices from the main screen.<br>- Support for Bluetooth insulin pen caps: *Mallya Solostar- and *Mallya Kwikpen*<br>- Integration with new medical devices:<br>&ensp;- Glucometer *Glucomaxx BT*<br>&ensp;- Scale *iXellence SCALE PRO IT*<br>- Added functionality to invalidate incorrect measurements.<br>- Option to edit the number of test strips assigned to the glucometer.<br>- Adaptation of the app to work with a new microservices-based architecture.<br><br><b>My role:</b><br><br>- Development and maintenance of the mobile application<br>- Implementation of new features and hardware integrations<br>- Bug fixing<br>- Collaboration with the backend team<br><br><i>Image source: <i>play.google.com/store/apps/details?id=com.genexo.zdrowiej</i></i>"
    },
    "dkar": {
      "name": "Cardiological Diagnostics",
      "description": "<b>Mobile Application for Collecting Data from Medical Devices</b><br>Professional project – team of approx. 5 people<br><br><b>Description:</b><br>Cardiac Diagnostics is an intuitive mobile application designed to support people with heart conditions and those in risk groups. It enables easy and automatic monitoring of blood pressure and body weight through integration with dedicated Bluetooth devices – a blood pressure monitor and a scale. Measurements are instantly sent to the app and then forwarded to a backend system, where they can be monitored by a physician.<br><br>The app was designed with elderly users and those less familiar with technology in mind. Its operation is highly simplified – login is possible either via email or by scanning a QR code. Each measurement is accompanied by instructions to ensure proper execution.<br><br><b>Key Features:</b><br>- Login via email or QR code scan<br>- Option to connect and disconnect Bluetooth devices to the user's account<br>- Automatic listening for measurements from the scale and blood pressure monitor<br>- Real-time display of measurement results in the app<br>- Sending data to the backend API<br>- Ability to invalidate incorrect measurements<br>- Monitoring of results against alarm thresholds<br>- Support for remote monitoring by medical professionals<br><br><b>My Role:</b><br>- Full responsibility for the mobile application – from implementation to release<br>- Close cooperation with the backend team for API integration<br><br>Image source: <i>apkpure.com/diagnostyka-kardiologiczna/pl.mediguard.core</i>"
    },
    "winery": {
      "name": "Winery",
      "description": "<b>Mobile app to assist in wine production</b><br>This is an application created as part of my engineering thesis<br>Author project: concept, UX/UI design, implementation<br><br><b>Description:</b><br>Winery is my original mobile application designed for home winemaking enthusiasts. It acts as a personal assistant throughout the entire wine production process – from planning and ingredient calculation to tracking progress and saving finished wines.<br><br><b>Key features:</b><br><br>- <b>Recipes and guides</b> – a collection of proven recipes and practical tips for both beginners and experienced winemakers.<br>- <b>Winemaking calculators</b> – essential during wine production, automatically calculating values based on measurements.<br>- <b>Step–by–step guidance</b> – the app walks users through the entire winemaking process, showing each stage and sending reminders.<br>- <b>Progress tracking</b> – mark completed steps and monitor which stage each wine is currently in.<br>- <b>Winery management</b> – save wines in production and finished bottles with editing options.<br>- <b>Custom recipes</b> – create and save your own formulas for future use.<br><br><b>My role:</b><br>Full responsibility for the entire process – from concept and design to implementation, testing, and publication.<br>",
      "gitHubButton": "GitHub"
    },
    "akameis": {
      "name": "Akameis",
      "gameJamButton": "Game Jam website",
      "gameButton": "Game",
      "description": "<b>Platform game created during Ludum Dare 49 game jam</b><br>Private project – team of 5 people  <br><br><b>Description:</b><br>Akameis is a turn-based platformer in which the player ascends through successive floors of a mysterious tower, defeating enemies and using various abilities to reach the top. The gameplay combines elements of exploration, combat, and building, with its unique feature being the forced-turn mechanic – each move must be made within a limited time. The vector-based art style gives the game a distinctive, minimalist look.  <br><br><b>Key Features:</b><br>- Progression through levels representing different floors of the tower  <br>- Destroying objects using a hammer  <br>- Placing bombs that destroy everything within range  <br>- Shooting enemies with a bow  <br>- Building wooden platforms  <br>- Three types of enemies with different behaviors  <br>- Turn-based system with a time limit for each move  <br><br><b>My Role:</b><br>- Programming and implementing core gameplay mechanics  <br>- Developing logic for player interactions with objects and enemies  <br>- Creating elements for destroying, building, and attacking enemies  "
    },
    "organizer": {
      "name": "Organizer",
      "description": "<b> Web Application Supporting Students in Learning</b><br>Student project – team of 9 people<br><br><b> Description:</b><br>A web application designed to support students in organizing their studies and daily tasks. It offers a set of tools to help with time management, task tracking, expense control, and finding event locations on the map. The central feature of the application is a voice assistant that responds to user voice commands and replies with a modulated voice, enabling intuitive and interactive operation.<br><br><b> Key Features:</b><br>- <b> Voice Assistant</b> – processes voice commands to create events, tasks, and expenses, provides date and time information, and supports additional commands (e.g., dice roll, days until the weekend, countdown to the end of the year).<br>- <b> Calendar</b> – add events with name, date, time, and location, integrated with Google Maps.<br>- <b> Expense Tracker</b> – add, edit, and delete expenses, with a pie chart showing the expense structure.<br>- <b> To-Do List</b> – add, edit, and delete tasks with due dates, and mark them as completed.<br>- <b> Google Maps</b> – display event locations from the calendar.<br><br><b> My Role:</b><br>- Implementation of the voice assistant functionality – capturing commands, handling all available voice commands, and integrating them with the relevant application modules."
    },
    "simulation": {
      "name": "Intersection simulation",
      "description": "<b>Traffic Simulation at Intersections</b><br>Private project<br><br><b>Description:</b><br>A traffic simulation created in Unity as an academic project for the <i>Simulation</i> course. It includes three types of intersections: signalized intersections with potential conflicts, signalized conflict-free intersections, and a turbo roundabout. The user can start and pause the simulation, control the camera (three different views for each intersection), and adjust the time speed from 1× to 10×.<br><br>The simulation displays both the current and average traffic throughput (in vehicles per minute). Vehicles respond to traffic lights, follow predefined routes (straight, left turn, right turn), and react to other vehicles on a collision course, accurately reflecting realistic traffic behavior.<br><br><b>Key features:</b><br>- Three types of intersections: signalized with conflicts, signalized conflict-free, turbo roundabout<br>- Start and stop simulation controls<br>- Three camera views for each intersection<br>- Adjustable simulation speed (1×–10×)<br>- Real-time measurement and display of traffic throughput<br>- Realistic vehicle behavior in response to lights and other traffic<br><br><b>My role:</b><br>- Full project execution – from concept to implementation",
      "gitHubButton": "GitHub"
    },
    "printer": {
      "name": "3D Printer",
      "description": "<b>Custom 3D Printer</b><br>Private project<br><br><b>Description:</b><br>A fully self-designed and self-built 3D printer created entirely from scratch. While I analyzed similar projects available online, none met my requirements for print quality, frame stability, and overall size optimization. My goal was to achieve a large printing area while keeping the printer’s total dimensions to a minimum, as well as eliminating design flaws observed in other builds.<br><br>The frame was engineered to ensure maximum rigidity and high-precision printing. I created a detailed design with exact dimensions in <b>Blender</b>, ordered the necessary parts, assembled the printer according to the plan, and customized the free <b>Repetier</b> software to match my components. The electronics are based on Arduino modules designed for 3D printers. The printer features a build volume of approximately <b>20 × 20 × 40 cm</b> and includes a heated print bed.<br><br><b>Key features:</b><br>- Fully custom-designed and optimized construction<br>- Large build volume in a compact frame<br>- Stable frame ensuring high print quality<br>- Arduino-based electronics<br>- Customized Repetier software<br>- Heated print bed<br><br><b>My role:</b><br>- Full project execution – from concept and Blender design to assembly and configuration"
    },
    "spaceTaxi": {
      "name": "Space Taxi",
      "description": "<b>Arcade game with shadow-chasing mechanics</b><br>Private project<br><br><b>Description:</b><br>The game was developed during the Ludum Dare 47 game jam within 48 hours. The player takes on the role of an alien whose goal is to reach a taxi as quickly as possible. After each successful round, the game resets – but this time, the player competes against their own shadow, which perfectly replicates their previous movements. With each round, a new shadow appears, making the game increasingly challenging and dynamic.<br><br>To increase the chance of success, the player can place obstacles along the path to block their previous selves and gain an advantage.<br><br><b>Key features:</b><br>- Unique mechanic of shadows that replicate the player’s movements from previous rounds<br>- Gradually increasing difficulty by adding more shadows each round<br>- Strategic obstacle placement to hinder past selves<br>- Fast-paced and dynamic gameplay<br>- Visual style inspired by indie game jam aesthetics<br><br><b>My role:</b><br>- Full responsibility for the project – from concept and development to publishing the game",
      "gameButton": "Game",
      "gameJamButton": "Game Jam website",
      "gitHubButton": "GitHub"
    },
    "guessPhrase": {
      "name": "Guess the phrase",
      "description": "<b>Password Guessing Game</b><br>Private project<br><br><b>Description:</b><br>A simple logic game created as part of a university course project. The player’s task is to guess a password based on a given category and the number of empty fields corresponding to its letters. The player selects letters from the alphabet, having a limited number of attempts. Correctly guessing the password awards points, while an incorrect guess ends the game.<br><br>The game allows the player to enter their nickname and save their score to a ranking list. Player data and scores are stored in a database.<br><br><b>Key features:</b><br>- Random password selection with category hints<br>- Limited number of letter-guessing attempts<br>- Scoring system for correct guesses<br>- Player ranking stored in a database<br>- Option to enter a nickname and add it to the scoreboard<br><br><b>My role:</b><br>- Full project implementation – from concept to development and deployment"
    },
    "inventory": {
      "name": "Inventory",
      "description": "<b>Mobile Inventory Application</b><br>Student project – team of 14 people<br><br><b>Description:</b><br>A mobile application developed as part of a university team project, designed to support the process of inventorying fixed assets in university buildings. It allows users to scan QR codes using a smartphone camera, automatically count scanned items, generate reports, and view their history. The app’s interface was designed to be simple and intuitive, with a focus on ease of use for staff conducting inventory tasks.<br><br><b>Key features:</b><br>- Login via email and password<br>- Selection of building and room before starting inventory<br>- QR code scanning and automatic counting of scanned items<br>- Viewing lists of scanned and missing items<br>- Option to mark missing items as found<br>- Adding new buildings and rooms<br>- Generating reports and viewing them within the app<br><br><b>My role:</b><br>- Creating the login screen<br>- Implementing QR code scanning logic<br>- Developing style classes for a consistent application appearance<br>- Implementing minor functionalities in other parts of the app",
      "gitHubButton": "GitHub"
    },
    "lamp": {
      "name": "aRGB lamp",
      "description": "<b>RGB Addressable LED Lamp</b><br>Private project<br><br><b>Description:</b><br>A lamp built with an Arduino Nano, utilizing addressable RGB LEDs to create a variety of lighting effects. The housing, made from a PVC tube, is complemented by custom-designed end caps, 3D-printed to hold the LED core perfectly centered. At the back, the lamp features a power input, while three buttons on the front allow the user to change modes, adjust animation speed, and control brightness.<br><br>Additionally, a special end cap with a USB cable opening was designed, enabling quick connection to a computer for easy firmware updates. The lamp supports modes such as fire simulation, rain, storm, rainbow spirals, and static colors.<br><br><b>Key features:</b><br>- Multiple lighting modes (fire, rain, storm, rainbow spirals, static colors)<br>- Mode, speed, and brightness control via buttons<br>- PVC tube housing with custom 3D‑printed end caps<br>- Easy connection to a computer for firmware updates<br><br><b>My role:</b><br>- Full project execution – from concept to implementation"
    },
    "craneSimulator": {
      "name": "Crane Simulator",
      "description": "<b>Two-Player Arcade Game with a Dedicated Controller</b><br>Private project – team of 4 people<br><br><b>Description:</b><br>A game created during a three-day game jam. Two players take on the role of crane operators and compete against each other by repairing a damaged building. The goal is to earn as many points as possible by lifting items from a truck and placing them in the correct locations – such as fixing broken windows, bricking up wall holes, or removing graffiti. Each item is randomly selected, adding unpredictability to the gameplay.<br><br>A unique aspect of the project was the creation of a dedicated physical controller based on Arduino, consisting of two joysticks and two buttons.<br><br><b>Key Features:</b><br>- Competitive two-player local multiplayer<br>- Physical interaction with the game via a custom-built controller<br>- Random generation of repair tasks<br>- Scoring system based on player performance<br>- Interactive challenges: picking up, transporting, and placing objects<br><br><b>My Role:</b><br>- Co-creation of the gameplay concept and mechanics<br>- Design and construction of the Arduino-based physical controller<br>- Implementation and integration of the controller into the game logic",
      "gameButton": "Game"
    },
    "thief": {
      "name": "Thief Game",
      "description": "<b>3D Game Prototype with Extensive Interaction</b><br>Private Project<br><br><b>Description:</b><br>A 3D game prototype in which the player takes on the role of a thief, utilizing a wide range of mechanics and interactions. The game features an inventory system consisting of a tool belt for handy items and a backpack for additional objects. Items can also be held in the left or right hand and used — for example, a flashlight for illumination, a hammer for driving nails, or an axe for breaking down doors.<br><br>The game world is interactive — the player can open doors, turn lights on and off, and drive vehicles. Cars have multiple lighting modes, and several models are available in the game. An intelligent traffic system ensures that vehicles follow predefined paths, react to one another, and obey traffic lights. Most 3D models, except for background buildings, were created from scratch in Blender specifically for this project. The game also includes a detailed tutorial that presents all available mechanics.<br><br><b>Key Features:</b><br>- Inventory system: tool belt, backpack, items in hands<br>- Tool usage (flashlight, hammer, axe)<br>- Environment interaction (opening doors, switching lights)<br>- Driving vehicles with different lighting modes<br>- Intelligent traffic system (paths, vehicle interactions, traffic light response)<br>- Multiple car models in the game<br>- Most 3D models created from scratch in Blender<br>- Comprehensive tutorial showcasing game mechanics<br><br><b>My Role:</b><br>- Full project execution – from concept, through creating 3D models, to implementing all functionalities"
    },
    "dothing": {
      "name": "Dothing",
      "description": "<b>2D Game Prototype Created for Ludum Dare 45 Game Jam</b><br>Private project – team of 4 people<br><br><b>Description:</b><br>A 2D game in which the player starts as a simple dot moving across a procedurally generated map. Throughout the game, the player can collect upgrades such as a shield, attack spikes, or extra life. Points earned during exploration can be spent on various actions. Once enough points are collected, the player can build a base. Inside the base, the player can produce three types of machines that generate upgrades. These machines require points as power. During gameplay, enemies can also be encountered.<br><br><b>Key Features:</b><br>- Procedural map generation<br>- Upgrade system (shield, spikes, extra life)<br>- Ability to collect points and invest them in progression<br>- Base building and production of machines that generate upgrades<br>- Sound effects tailored to in-game actions<br><br><b>My Role:</b><br>- Implementing player movement mechanics<br>- Adding machines that produce upgrades<br>- Implementing the machine production system within the base<br>- Handling procedural map generation<br>- Integrating and managing in-game sound effects",
      "gameButton": "Game",
      "gitHubButton": "GitHub"
    },
    "demonSnail": {
      "name": "Demon Snail Revenge",
      "description": "<b>Single-Player Fighting Game</b><br>Private project – team of 5 people<br><br><b>Description:</b><br>Demon Snail Revenge is a single-player fighting game in which the player takes on the role of an unassuming yet deadly snail. It was created in 3 days as part of the PolyJam game jam. The goal is to defeat a series of increasingly challenging opponents. Each victory unlocks new, more powerful attacks that can be executed by inputting a specific sequence of moves. The combat system is based on a “combo” mechanic – to perform an attack, the player must move both controller sticks or use the WSAD and arrow keys in the correct order.<br><br>The game features animated cutscenes and a damage system that allows opponents to defeat the player if they are not quick and effective enough in battle.<br><br><b>Key features:</b><br>- Duel system with increasingly difficult opponents<br>- Unlocking new attacks after each victory<br>- Performing attacks and combos using a controller or keyboard<br>- Cutscenes and animations enhancing the game’s atmosphere<br>- Possibility of losing due to damage inflicted by the opponent<br><br><b>My role:</b><br>- Implementing attack handling and combo system using both controller and keyboard<br>- Displaying on-screen tips for the player related to executing attacks",
      "gameButton": "Game",
      "gitHubButton": "GitHub"
    },
    "sftk": {
      "name": "Sacrifice For The King",
      "description": "<b>Simple Arcade Game</b><br>Private project<br><br><b>Description:</b><br>A 2D game developed in 48 hours during the Ludum Dare 43 game jam, designed for mobile devices. The gameplay focuses on reaction speed – within a limited time, the player must deliver the correct number of gifts to the king. In the center of the screen, an item appears, and the player must swipe it to the right to present it to the king or to the left to discard it.<br><br>The difficulty increases with each round – the number of required gifts grows, and the king’s expectations change. Delivering the wrong item results in negative points, and failing to provide enough gifts ends the game. The main menu displays the player’s best score from previous runs.<br><br><b>Key Features:</b><br>- Fast-paced gameplay focused on quick decision-making<br>- Swipe-based mechanics to move items left or right<br>- Changing list of required gifts each round<br>- Increasing difficulty as the game progresses<br>- Positive and negative point system<br>- Display of best score in the main menu<br>- Optimized for mobile devices<br><br><b>My Role:</b><br>- Full project development – from concept and implementation to game publication",
      "gameButton": "Game",
      "gameJamButton": "Game Jam website",
      "gitLabButton": "GitLab"
    },
    "wsfGameJam4": {
      "name": "\"Don't Listen To Your Son\" game",
      "description": "<b>Humorous Puzzle Game Prototype</b><br>Private project – team of 4<br><br><b>Description:</b><br><i>Don't Listen To Your Son</i> was created during the Warsaw Film School Game Jam IV within 72 hours. The gameplay revolves around an unusual rule – the player's goal is to <b>not follow the instructions</b> of a character who follows them throughout the game. Puzzles range from simple tasks, such as looking left instead of right, to more complex challenges involving hidden environmental interactions, like grabbing a clock hand and turning back time.<br><br><b>Key features:</b><br>- Original mechanic based on ignoring given instructions<br>- Varied puzzles – from simple reactions to complex environmental interactions<br>- Ability to move on foot or drive a car<br>- Object throwing mechanic<br>- Levels designed for creative rule-breaking<br><br><b>My role:</b><br>- Co-creating the concept and gameplay mechanics<br>- Implementing character movement and driving mechanics<br>- Adding the object throwing mechanic<br>- Designing and building game levels<br>"
    },
    "ciosy": {
      "name": "Tusks Game",
      "description": "<b>Open-World Survival Game</b><br>Private project<br><br><b>Description:</b><br>A survival game developed in JavaScript, rendered on a <i>canvas</i> element, requiring a database connection. The player takes on the role of a prehistoric human, exploring a procedurally generated world, gathering resources, crafting tools, fighting enemies, and managing essential needs such as food and water to survive.<br><br>The game world is dynamically generated for each playthrough and includes water bodies, trees, stones, bushes, and enemies. Core mechanics include movement with animations, collision detection, combat with three enemy types, an interactive inventory with drag-and-drop functionality, and a crafting system for tools, weapons, containers, and other items.<br><br>Players can interact with the environment by collecting berries, chopping down trees, mining stones, fetching water, throwing rocks (including at enemies), and even skipping stones on water. A time system influences plant growth and resource regeneration. Hunger, thirst, and health meters determine the character’s condition, and neglecting them results in death.<br><br><b>Key Features:</b><br>- Procedural map generation with diverse environmental elements<br>- Movement system with animations and collision detection<br>- Combat with enemies (3 types, item drops, animations)<br>- Interactive inventory with quick-use item slots<br>- Hunger, thirst, and health bars affecting survival<br>- Various environmental interactions (gathering, fetching water, chopping trees, mining stones)<br>- Rock throwing and stone skipping mechanics<br>- Time progression affecting resource regeneration and plant growth<br>- Crafting system (tools, weapons, containers, and more)<br><br><b>My role:</b><br>- Full project execution – from concept to implementation",
      "gitHubButton": "GitHub"
    },
    "simpleGame": {
      "name": "Simple game",
      "description": "<b>Simple Mobile Arcade Game</b><br>Private project<br><br><b>Description:</b><br>A mobile game designed for quick, intuitive gameplay, controlled entirely with one finger. The player pilots a small airplane and must swipe up, down, left, or right to avoid obstacles and survive as long as possible. Points are earned over time, and the current high score is displayed in the main menu.<br><br>The difficulty gradually increases as the game speeds up, making quick reflexes essential. Players can also collect diamonds along the way, adding an extra layer of challenge to the flight.<br><br><b>Key Features:</b><br>- Intuitive swipe-based controls<br>- Increasing difficulty through game speed progression<br>- Scoring system with high score display<br>- Collectible diamonds for added challenge<br>- Simple, dynamic, and engaging gameplay<br><br><b>My role:</b><br>- Full project execution – from concept to implementation"
    },
    "blockGame": {
      "name": "Block Game",
      "description": "<b>Simple Block-Stacking Arcade Game</b><br>Private project<br><br><b>Description:</b><br>A game where the player takes on the role of a worker tasked with stacking blocks on the floor. Blocks can be pushed left or right, with the main objective being to completely fill the floor, earning points in the process.<br><br>Blocks fall from above, and being crushed by one ends the game. However, the player can destroy a falling block by jumping when it is directly overhead. The gameplay revolves around earning as many points as possible and beating personal high scores. The main menu displays the best results. The game features character animations and background music.<br><br><b>Key Features:</b><br>- Push blocks left and right<br>- Destroy falling blocks by jumping at the right moment<br>- Scoring system and high score tracking<br>- Character animations and background music<br><br><b>My role:</b><br>- Full project execution – from concept to implementation"
    },
    "arkanoid": {
      "name": "Arkanoid Game",
      "description": "<b>Simple Arkanoid-Style Game</b><br>Private project<br><br><b>Description:</b><br>A game inspired by the classic Arkanoid, where the goal is to break all blocks on the board using a ball bounced off a paddle controlled by the player. Lives are limited, and a life is lost whenever the ball falls out of the play area.<br><br>During gameplay, destroying a block may release a bonus or penalty. To activate it, the player must catch it with the paddle. The game includes a wide range of power-ups and debuffs:<br>- Increase or decrease paddle size<br>- Add or lose a ball<br>- Speed up or slow down the paddle<br>- Temporary piercing ball that destroys blocks without bouncing<br>- Temporary weakened ball that can’t break blocks<br>- Speed up or slow down the ball<br>- Temporary floor that automatically bounces the ball<br>- Random bonus<br><br><b>Key Features:</b><br>- Classic Arkanoid-style gameplay mechanics<br>- Limited life system<br>- Variety of bonuses and penalties for dynamic gameplay<br>- Real-time paddle control and ball interaction<br><br><b>My role:</b><br>- Full project execution – from concept to implementation"
    },
    "stocks": {
      "name": "Stocks Game",
      "description": "<b>Console Stock Trading Game</b><br>Individual project<br><br><b>Description:</b><br>A console-based game focused on buying and selling stocks, controlled via numeric input from the keyboard. It features an interactive menu, a save/load game state system, and two difficulty levels – medium and hard.<br><br>The player can invest in one of three available stocks, each with different price ranges. Stock prices change daily, either rising or falling, and these fluctuations are displayed on screen. The game also includes a casino, where players can try their luck at a slot machine or roulette, with the possibility of multiplying their funds or losing everything.<br><br>The main objective is to strategically manage finances to maximize wealth.<br><br><b>Key Features:</b><br>- Buying and selling stocks with dynamic pricing<br>- Save and load game state functionality<br>- Two difficulty levels: medium and hard<br>- Daily stock price changes displayed on screen<br>- Casino with slot machine and roulette<br>- Strategic capital management mechanics<br><br><b>My role:</b><br>- Full project execution – from concept to implementation"
    }
  }
}
